// <auto-generated />
using JanamApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JanamApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JanamApi.Models.Output", b =>
                {
                    b.Property<decimal>("Bill_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Client_Category_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Exchange_Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Unbilled_Amount")
                        .HasColumnType("float");

                    b.Property<double>("YTD_Amount_dr")
                        .HasColumnType("float");

                    b.Property<decimal>("YTD_Bill_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("YTD_Unbilled_Amount")
                        .HasColumnType("float");

                    b.Property<double>("amount_dr")
                        .HasColumnType("float");

                    b.ToTable("Output");
                });
#pragma warning restore 612, 618
        }
    }
}
